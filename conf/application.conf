# https://www.playframework.com/documentation/latest/Configuration


# Application
# ~~~~~~
play.http.secret.key = "fV{:2C1QZkAMDzf3x9-,j4l?/%COzal:1N@=UsNxd&]D0CV5F0IFC[58J[2XRs7s}zlV7g>t[ny>G7!rrXZe0w~2j{=P1}!G!~sxqPH[:q!d_&'[,C>.yq^_;F2Y_."
application.host="localhost:9000"
application.session.expire.after_minutes=-1

play.i18n {
  langs = [ "en" ]

  date.format {
    en    = "yyyy-MM-dd"
  }

  langCookieSecure = true
  langCookieHttpOnly = true
}

## Modules
# https://www.playframework.com/documentation/latest/Modules
# ~~~~~
# Control which modules are loaded when Play starts.  Note that modules are
# the replacement for "GlobalSettings", which are deprecated in 2.5.x.
# Please see https://www.playframework.com/documentation/latest/GlobalSettings
# for more information.
#
# You can also extend Play functionality by using one of the publically available
# Play modules: https://playframework.com/documentation/latest/ModuleDirectory
play.modules {
  # By default, Play will load any class called Module that is defined
  # in the root package (the "app" directory), or you can define them
  # explicitly below.
  # If there are any built-in modules that you want to disable, you can list them here.
   enabled = ${?play.modules.enabled} [
     "modules.Module"
   ]

  # If there are any built-in modules that you want to disable, you can list them here.
  #disabled += ""
}

play.http {
  ## ErrorHandler
  # https://www.playframework.com/documentation/latest/JavaRouting
  # https://www.playframework.com/documentation/latest/ScalaRouting
  # ~~~~~
  # If null, will attempt to load a class called ErrorHandler in the root package,
  # errorHandler = controllers.ErrorHandler

  ## Filters
  # https://www.playframework.com/documentation/latest/ScalaHttpFilters
  # https://www.playframework.com/documentation/latest/JavaHttpFilters
  # ~~~~~
  # Filters run code on every request. They can be used to perform
  # common logic for all your actions, e.g. adding common headers.
  # Defaults to "Filters" in the root package (aka "apps" folder)
  # Alternatively you can explicitly register a class here.
  filters=filters.AppliedFilters

  forwarded {
    version = x-forwarded
    trustedProxies = ["0.0.0.0/0", "::/0"]
  }
}


## Filters
# https://www.playframework.com/documentation/latest/Filters
# ~~~~~
# There are a number of built-in filters that can be enabled and configured
# to give Play greater security.  You must enable this by adding to build.sbt:
#
# libraryDependencies += filters
#
play.filters {
  ## Allowed hosts filter configuration
  # https://www.playframework.com/documentation/latest/AllowedHostsFilter
  # ~~~~~
  # Play provides a filter that lets you configure which hosts can access your application.
  # This is useful to prevent cache poisoning attacks.
  hosts {
    # Allow requests to example.com, its subdomains, and localhost:9000.
    allowed = ["localhost:9000", "localhost:3000"]
  }
}

# Executions context
#
# parallelism-factor : nb of threads per available processor
# parallelism-max : nb max of threads in the pool
#
# doc : https://www.playframework.com/documentation/2.3.x/ThreadPools
# ~~~~~
contexts {
  simple-db-lookups {
    fork-join-executor {
      parallelism-factor = 10.0
    }
  }
  expensive-db-lookups {
    fork-join-executor {
      parallelism-max = 4
    }
  }
  db-write-operations {
    fork-join-executor {
      parallelism-factor = 2.0
    }
  }
  expensive-cpu-operations {
    fork-join-executor {
      parallelism-max = 2
    }
  }
  mail_execution_context {
    fork-join-executor {
      parallelism-factor = 10.0
    }
  }
}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
play.evolutions.enabled=true
play.evolutions.autoApply=true

# Slick
# ~~~~~~
# slick.dbs.default.db.numThreads=20
# slick.dbs.default.db.minConnections=10
# slick.dbs.default.db.maxConnections=20
# slick.dbs.default.db.connectionTimeout=5 seconds
# slick.dbs.default.db.validationTimeout=5 seconds

slick.dbs.default.profile="repository.models.dao.EnhancedPostgresDriver$"
slick.dbs.default.db.driver=org.postgresql.Driver
slick.dbs.default.db.url="jdbc:postgresql://localhost/particeep-scheduler"
slick.dbs.default.db.user=app
slick.dbs.default.db.password="app"

# Evolutions
# ~~~~~
job.request.timeout_ms=500

## Database Connection Pool
# https://www.playframework.com/documentation/latest/SettingsJDBC
# ~~~~~
# Play doesn't require a JDBC database to run, but you can easily enable one.
#
# libraryDependencies += jdbc
#
play.db {
  # The combination of these two settings results in "db.default" as the
  # default JDBC pool:
  #config = "db"
  #default = "default"

  # Play uses HikariCP as the default connection pool.  You can override
  # settings by changing the prototype:
  prototype {
    # Sets a fixed JDBC connection pool size of 50
    #hikaricp.minimumIdle = 50
    #hikaricp.maximumPoolSize = 50
  }
}


## JDBC Datasource
# https://www.playframework.com/documentation/latest/JavaDatabase
# https://www.playframework.com/documentation/latest/ScalaDatabase
# ~~~~~
# Once JDBC datasource is set up, you can work with several different
# database options:
#
# Slick (Scala preferred option): https://www.playframework.com/documentation/latest/PlaySlick
# JPA (Java preferred option): https://playframework.com/documentation/latest/JavaJPA
# EBean: https://playframework.com/documentation/latest/JavaEbean
# Anorm: https://www.playframework.com/documentation/latest/ScalaAnorm
#
db {
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named `default`

  # https://www.playframework.com/documentation/latest/Developing-with-the-H2-Database
  #default.driver = org.h2.Driver
  #default.url = "jdbc:h2:mem:play"
  #default.username = sa
  #default.password = ""

  # You can turn on SQL logging for any datasource
  # https://www.playframework.com/documentation/latest/Highlights25#Logging-SQL-statements
  #default.logSql=true
}


# Captcha
# ~~~~~
recaptcha.enabled=false
recaptcha.apiVersion=2
recaptcha.languageMode=play
recaptcha.forceLanguage=en
recaptcha.publicKey="---"
recaptcha.privateKey="---"

# User
# ~~~~~
application.admin.email="admin@particeep.com"
application.admin.password="12345678"
